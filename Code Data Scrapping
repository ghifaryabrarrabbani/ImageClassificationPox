{"cells":[{"cell_type":"markdown","source":["Tinggal mengganti keyword yang dibutuhkan."],"metadata":{"id":"TV8LDHT8utIG"}},{"cell_type":"code","source":["import os\n","import time\n","import requests  # Import the requests module\n","from selenium import webdriver\n","from selenium.webdriver.chrome.options import Options\n","from selenium.webdriver.common.by import By\n","from PIL import Image\n","import io\n","\n","def get_images_from_google(driver, delay, max_images):\n","    def scroll_down(driver):\n","        driver.execute_script(\"window.scrollTo(0, document.body.scrollHeight);\")\n","        time.sleep(delay)\n","\n","    image_urls = set()\n","    skips = 0\n","\n","    while len(image_urls) + skips < max_images:\n","        scroll_down(driver)\n","\n","        thumbnails = driver.find_elements(By.CSS_SELECTOR, '.rg_i, .Q4LuWd')\n","        for img in thumbnails[len(image_urls) + skips:max_images]:\n","            try:\n","                img.click()\n","                time.sleep(delay)\n","            except:\n","                continue\n","\n","            images = driver.find_elements(By.CSS_SELECTOR, '.r48jcc, .pT0Scc, .iPVvYb')\n","            for image in images:\n","                if image.get_attribute('src') in image_urls:\n","                    max_images += 1\n","                    skips += 1\n","                    break\n","\n","                if image.get_attribute('src') and 'http' in image.get_attribute('src'):\n","                    image_urls.add(image.get_attribute('src'))\n","                    print(f\"Found {len(image_urls)}\")\n","\n","    return image_urls\n","\n","def download_image(download_path, url, file_name):\n","    try:\n","        image_content = requests.get(url).content\n","        image_file = io.BytesIO(image_content)\n","        image = Image.open(image_file)\n","\n","        # Check if the image can be identified and is in a compatible format\n","        if image.format not in [\"JPEG\", \"PNG\"]:\n","            print(f\"Skipping image with unsupported format: {url}\")\n","            return\n","\n","        file_path = os.path.join(download_path, file_name)  # Use os.path.join to ensure correct path\n","\n","        with open(file_path, \"wb\") as f:\n","            image.save(f, \"JPEG\")\n","\n","        print(\"Success\")\n","    except Exception as e:\n","        print('FAILED -', e)\n","\n","\n","# Ask the user for the search query\n","search_query = input(\"Enter your Google Images search query: \")\n","\n","# Create the 'imgs/' directory if it doesn't exist\n","download_path = 'C:/TSD/healthy'\n","os.makedirs(download_path, exist_ok=True)\n","\n","# Create a Chrome driver\n","options = Options()\n","options.add_argument(\"--start-maximized\")\n","driver = webdriver.Chrome(options=options)\n","\n","# Open the Google Images search page with the provided search query\n","search_url = f\"https://www.google.com/search?q={search_query}&tbm=isch\"\n","driver.get(search_url)\n","\n","# Perform image scraping and downloading\n","urls = get_images_from_google(driver, 2, 800)\n","\n","for i, url in enumerate(urls):\n","    download_image(download_path, url, str(i) + \".jpg\")\n","\n","# Close the driver instance\n","driver.quit()"],"metadata":{"id":"aGBJLodAuoWb"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"collapsed_sections":["EdQ_TI26rHM2","Iz4XMDbzjJwH","mwnK0DzZKE7c","MNdnJTSRSEkd","niIrkr8380ni","RjnlsS57LDhu"],"provenance":[{"file_id":"19aF2-6AWW-FfuzyyAI9snflUmfZJ-qpn","timestamp":1704077790051},{"file_id":"1CNx0egkkdLAF2w0r5zR6FeSrLg4j2SmH","timestamp":1701811164622}],"mount_file_id":"19aF2-6AWW-FfuzyyAI9snflUmfZJ-qpn","authorship_tag":"ABX9TyN/qq6H83vTVdbq85gL1ct5"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}